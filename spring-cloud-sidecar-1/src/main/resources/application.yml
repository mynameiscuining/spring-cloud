#本项目是用于集成整合异构语言开发的微服务(非java语言开发的)
server:
  port: 7416


sidecar:
 #异构平台的端口
  port: 7415
  #异构平台自定义检查地址
  health-uri: http://192.168.217.1:7415/actuator/health
#如果sidecar和异构不在同一台主机需要配置eureka.instance.hostname
eureka:
  instance:
    #如果sidecar和异构不在同一台主机需要配置eureka.instance.hostname
    #注意sidecar这里强烈建议这里要配置sidecar所在IP
    hostname: localhost
    #hostname=${HOST_NAME}
    # 表示eureka client发送心跳给server端的频率
    #生产环境建议默认值
    #You can change the period by setting eureka.instance.leaseRenewalIntervalInSeconds.
    #Setting it to a value of less than 30 speeds up the process of getting clients connected to other services.
    #In production, it is probably better to stick with the default,
    #because of internal computations in the server that make assumptions about the lease renewal
    lease-renewal-interval-in-seconds: 30
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 90
    #使用IP进行服务注册
    prefer-ip-address: true
    #注册列status显示的名字
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    #显示IP
    #instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    #此处基于starter-actuator
    healthcheck:
      enabled: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:7402/eureka
      #高可用集群
      #defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:7402/eureka,http://${spring.security.user.name}:${spring.security.user.password}@localhost:7406/eureka

spring:
  application:
    name: sidecar-1
  security:
    user:
      name: cuining
      password: rootadmin


#Actuator监控管理,暴露所有端点,需要添加starter-actuator
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
info:
  name: sidecar-1
  port: ${server.port}
  hostname: ${eureka.instance.hostname}